'use client';

import { Invoice } from '@/types/database';
import { useClients, useProjects } from '@/hooks/useDatabase';
import { formatCurrency, formatDate } from '@/lib/utils';

interface InvoicePreviewProps {
  invoice: Invoice;
}

export default function InvoicePreview({ invoice }: InvoicePreviewProps) {
  const { data: clients } = useClients();
  const { data: projects } = useProjects();

  const client = clients.find(c => c.id === invoice.clientId);
  const project = projects.find(p => p.id === invoice.projectId);

  const getStatusColor = (status: string) => {
    switch (status) {
      case 'Paid': return 'bg-green-100 text-green-800';
      case 'Sent': return 'bg-blue-100 text-blue-800';
      case 'Draft': return 'bg-gray-100 text-gray-800';
      case 'Overdue': return 'bg-red-100 text-red-800';
      default: return 'bg-gray-100 text-gray-800';
    }
  };

  return (
    <div className="bg-white border border-stone-200 rounded-lg p-8 max-w-4xl mx-auto">
      {/* Header */}
      <div className="flex justify-between items-start mb-8">
        <div>
          <h1 className="text-3xl font-bold text-stone-900">INVOICE</h1>
          <p className="text-stone-600 mt-2">Freelancer OS</p>
        </div>
        <div className="text-right">
          <div className="text-sm text-stone-600">Invoice #</div>
          <div className="text-lg font-semibold text-stone-900">{invoice.invoiceNumber}</div>
          <div className="mt-2">
            <span className={`px-2 py-1 text-xs font-medium rounded-full ${getStatusColor(invoice.status)}`}>
              {invoice.status}
            </span>
          </div>
        </div>
      </div>

      {/* Bill To */}
      <div className="grid grid-cols-1 md:grid-cols-2 gap-8 mb-8">
        <div>
          <h3 className="text-sm font-medium text-stone-700 mb-2">Bill To:</h3>
          {client ? (
            <div className="text-stone-900">
              <div className="font-semibold">{client.name}</div>
              {client.company && <div>{client.company}</div>}
              {client.contactInfo && <div className="text-sm text-stone-600 mt-1">{client.contactInfo}</div>}
            </div>
          ) : (
            <div className="text-stone-500">No client selected</div>
          )}
        </div>
        
        <div className="text-right">
          <div className="text-sm text-stone-600 mb-2">Invoice Details:</div>
          <div className="text-stone-900">
            <div>Date: {formatDate(invoice.date)}</div>
            <div>Due Date: {formatDate(invoice.dueDate)}</div>
            {project && <div className="mt-1 text-sm text-stone-600">Project: {project.name}</div>}
          </div>
        </div>
      </div>

      {/* Items Table */}
      <div className="mb-8">
        <table className="w-full border-collapse">
          <thead>
            <tr className="border-b border-stone-200">
              <th className="text-left py-3 px-4 font-medium text-stone-700">Description</th>
              <th className="text-right py-3 px-4 font-medium text-stone-700">Qty</th>
              <th className="text-right py-3 px-4 font-medium text-stone-700">Rate</th>
              <th className="text-right py-3 px-4 font-medium text-stone-700">Amount</th>
            </tr>
          </thead>
          <tbody>
            {invoice.items.map((item, index) => (
              <tr key={item.id} className="border-b border-stone-100">
                <td className="py-3 px-4 text-stone-900">{item.description || 'Service'}</td>
                <td className="py-3 px-4 text-right text-stone-900">{item.quantity}</td>
                <td className="py-3 px-4 text-right text-stone-900">{formatCurrency(item.rate)}</td>
                <td className="py-3 px-4 text-right text-stone-900">{formatCurrency(item.amount)}</td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>

      {/* Total */}
      <div className="flex justify-end mb-8">
        <div className="w-64">
          <div className="flex justify-between py-2 border-b border-stone-200">
            <span className="font-semibold text-stone-900">Total:</span>
            <span className="font-semibold text-stone-900">{formatCurrency(invoice.total)}</span>
          </div>
        </div>
      </div>

      {/* Notes */}
      {invoice.notes && (
        <div className="mb-8">
          <h3 className="text-sm font-medium text-stone-700 mb-2">Notes:</h3>
          <div className="text-stone-900 whitespace-pre-wrap">{invoice.notes}</div>
        </div>
      )}

      {/* Footer */}
      <div className="text-center text-sm text-stone-500 border-t border-stone-200 pt-4">
        <p>Thank you for your business!</p>
        <p className="mt-1">Generated by Freelancer OS</p>
      </div>
    </div>
  );
}
